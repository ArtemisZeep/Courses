'use client'

import { useState } from 'react'
import { useRouter } from 'next/navigation'
import Link from 'next/link'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { Textarea } from '@/components/ui/textarea'

export default function CreateModulePage() {
  const router = useRouter()
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')
  const [formData, setFormData] = useState({
    title: '',
    description: '',
    order: 1
  })

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setLoading(true)
    setError('')

    try {
      const response = await fetch('/api/modules', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      })

      const data = await response.json()

      if (response.ok) {
        router.push('/admin')
      } else {
        setError(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥—É–ª—è')
      }
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.')
    } finally {
      setLoading(false)
    }
  }

  const handleInputChange = (field: string, value: string | number) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }))
  }

  return (
    <div className="container mx-auto py-8 px-4">
      <div className="mb-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å</h1>
            <p className="text-gray-600 mt-2">
              –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å –∫—É—Ä—Å–∞ —Å —É—Ä–æ–∫–∞–º–∏ –∏ —Ç–µ—Å—Ç–∞–º–∏
            </p>
          </div>
          <Link href="/admin">
            <Button variant="outline">
              ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∫–µ
            </Button>
          </Link>
        </div>
      </div>

      <div className="max-w-2xl">
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥—É–ª–µ
            </CardTitle>
            <CardDescription>
              –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –º–æ–¥—É–ª–µ
            </CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit} className="space-y-6">
              {error && (
                <div className="bg-red-50 border border-red-200 rounded-lg p-4">
                  <div className="flex items-center space-x-2">
                    <span className="text-red-600">‚ùå</span>
                    <div>
                      <h4 className="font-semibold text-red-800">–û—à–∏–±–∫–∞</h4>
                      <p className="text-sm text-red-700">{error}</p>
                    </div>
                  </div>
                </div>
              )}

              <div className="space-y-2">
                <Label htmlFor="title">–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è *</Label>
                <Input
                  id="title"
                  type="text"
                  value={formData.title}
                  onChange={(e) => handleInputChange('title', e.target.value)}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –û—Å–Ω–æ–≤—ã Excel"
                  required
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ</Label>
                <Textarea
                  id="description"
                  value={formData.description}
                  onChange={(e) => handleInputChange('description', e.target.value)}
                  placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –º–æ–¥—É–ª—è..."
                  rows={4}
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="order">–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è *</Label>
                <Input
                  id="order"
                  type="number"
                  min="1"
                  value={formData.order}
                  onChange={(e) => handleInputChange('order', parseInt(e.target.value) || 1)}
                  required
                />
                <p className="text-sm text-gray-500">
                  –ß–µ–º –º–µ–Ω—å—à–µ —á–∏—Å–ª–æ, —Ç–µ–º –≤—ã—à–µ –≤ —Å–ø–∏—Å–∫–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –º–æ–¥—É–ª—å
                </p>
              </div>

              <div className="flex gap-4 pt-4">
                <Button 
                  type="submit" 
                  disabled={loading || !formData.title.trim()}
                  className="flex-1"
                >
                  {loading ? (
                    <>
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                      –°–æ–∑–¥–∞–Ω–∏–µ...
                    </>
                  ) : (
                    <>
                      ‚úÖ –°–æ–∑–¥–∞—Ç—å –º–æ–¥—É–ª—å
                    </>
                  )}
                </Button>
                <Link href="/admin">
                  <Button type="button" variant="outline">
                    –û—Ç–º–µ–Ω–∞
                  </Button>
                </Link>
              </div>
            </form>
          </CardContent>
        </Card>

        <div className="mt-6 p-4 bg-blue-50 rounded-lg">
          <h3 className="font-semibold text-blue-800 mb-2">üí° –ß—Ç–æ –¥–∞–ª—å—à–µ?</h3>
          <p className="text-sm text-blue-700">
            –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥—É–ª—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫ –Ω–µ–º—É —É—Ä–æ–∫–∏ –∏ —Ç–µ—Å—Ç—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω—Å–∫—É—é –ø–∞–Ω–µ–ª—å.
          </p>
        </div>
      </div>
    </div>
  )
}