'use client'

import { useSession } from 'next-auth/react'
import { useEffect, useState } from 'react'
import Link from 'next/link'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'
import { Badge } from '@/components/ui/badge'

interface Module {
  id: string
  title: string
  description: string
  order: number
  isActive: boolean
  createdAt: string
  _count: {
    lessons: number
    questions: number
  }
}

export default function AdminPage() {
  const { data: session } = useSession()
  const [modules, setModules] = useState<Module[]>([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState('')

  useEffect(() => {
    fetchModules()
  }, [])

  const fetchModules = async () => {
    try {
      const response = await fetch('/api/admin/modules')
      const data = await response.json()

      if (response.ok) {
        setModules(data.modules)
      } else {
        setError(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª–µ–π')
      }
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª–µ–π')
    } finally {
      setLoading(false)
    }
  }

  const deleteModule = async (moduleId: string) => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –º–æ–¥—É–ª—å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
      return
    }

    try {
      const response = await fetch(`/api/modules/${moduleId}`, {
        method: 'DELETE',
      })

      if (response.ok) {
        setModules(modules.filter(m => m.id !== moduleId))
        alert('–ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω')
      } else {
        const data = await response.json()
        alert(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–æ–¥—É–ª—è')
      }
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–æ–¥—É–ª—è')
    }
  }

  const formatDate = (dateString: string) => {
    const date = new Date(dateString)
    return date.toLocaleDateString('ru-RU')
  }

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-gray-900 mx-auto"></div>
          <p className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-6">
            <div>
              <h1 className="text-3xl font-bold text-gray-900">
                –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
              </h1>
              <p className="text-gray-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º</p>
            </div>
            <div className="flex items-center space-x-4">
              <Link href="/dashboard">
                <Button variant="outline">–ö –∫—É—Ä—Å–∞–º</Button>
              </Link>
            <Button
                variant="outline"
                onClick={() => {
                console.log('[Admin] Logout clicked. Navigating to /auth/signout')
                window.location.href = '/auth/signout'
                }}
              >
                –í—ã—Ö–æ–¥
              </Button>
            </div>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {error && (
          <div className="bg-red-50 border border-red-200 rounded-md p-4 mb-6">
            <p className="text-red-700">{error}</p>
          </div>
        )}

        {/* Quick Stats */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">–í—Å–µ–≥–æ –º–æ–¥—É–ª–µ–π</CardTitle>
              <Badge variant="outline">{modules.length}</Badge>
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">{modules.length}</div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">–ê–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π</CardTitle>
              <Badge className="bg-green-100 text-green-800">
                {modules.filter(m => m.isActive).length}
              </Badge>
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">
                {modules.filter(m => m.isActive).length}
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">–í—Å–µ–≥–æ —É—Ä–æ–∫–æ–≤</CardTitle>
              <Badge variant="outline">
                {modules.reduce((total, m) => total + m._count.lessons, 0)}
              </Badge>
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">
                {modules.reduce((total, m) => total + m._count.lessons, 0)}
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">–í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤</CardTitle>
              <Badge variant="outline">
                {modules.reduce((total, m) => total + m._count.questions, 0)}
              </Badge>
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">
                {modules.reduce((total, m) => total + m._count.questions, 0)}
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Quick Actions */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <Card className="hover:shadow-lg transition-shadow cursor-pointer">
            <CardHeader>
              <CardTitle className="flex items-center">
                üìù –°–æ–∑–¥–∞—Ç—å –º–æ–¥—É–ª—å
              </CardTitle>
              <CardDescription>
                –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å –∫—É—Ä—Å–∞
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Link href="/admin/modules/create">
                <Button className="w-full">–°–æ–∑–¥–∞—Ç—å</Button>
              </Link>
            </CardContent>
          </Card>

          <Card className="hover:shadow-lg transition-shadow cursor-pointer">
            <CardHeader>
              <CardTitle className="flex items-center">
                üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Ä–æ–∫–∞–º–∏
              </CardTitle>
              <CardDescription>
                –°–æ–∑–¥–∞–≤–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Ä–æ–∫–∏ —Å Google Docs
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Link href="/admin/lessons">
                <Button className="w-full" variant="outline">
                  –£–ø—Ä–∞–≤–ª—è—Ç—å —É—Ä–æ–∫–∞–º–∏
                </Button>
              </Link>
            </CardContent>
          </Card>

          <Card className="hover:shadow-lg transition-shadow cursor-pointer">
            <CardHeader>
              <CardTitle className="flex items-center">
                üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–∞–Ω–∏–π
              </CardTitle>
              <CardDescription>
                –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Link href="/admin/submissions">
                <Button className="w-full" variant="outline">
                  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                </Button>
              </Link>
            </CardContent>
          </Card>

          <Card className="hover:shadow-lg transition-shadow cursor-pointer">
            <CardHeader>
              <CardTitle className="flex items-center">
                üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è–º–∏
              </CardTitle>
              <CardDescription>
                –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Link href="/admin/assignments">
                <Button className="w-full" variant="outline">
                  –£–ø—Ä–∞–≤–ª—è—Ç—å
                </Button>
              </Link>
            </CardContent>
          </Card>

          <Card className="hover:shadow-lg transition-shadow cursor-pointer">
            <CardHeader>
              <CardTitle className="flex items-center">
                üìä –ú–∞—Å—Å–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
              </CardTitle>
              <CardDescription>
                –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ —á–µ—Ä–µ–∑ JSON
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Link href="/admin/questions/bulk">
                <Button className="w-full" variant="outline">
                  –ó–∞–≥—Ä—É–∑–∏—Ç—å
                </Button>
              </Link>
            </CardContent>
          </Card>
        </div>

        {/* Modules Table */}
        <Card>
          <CardHeader>
            <div className="flex justify-between items-center">
              <div>
                <CardTitle>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è–º–∏</CardTitle>
                <CardDescription>
                  –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –∫—É—Ä—Å–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                </CardDescription>
              </div>
              <Link href="/admin/modules/create">
                <Button>+ –°–æ–∑–¥–∞—Ç—å –º–æ–¥—É–ª—å</Button>
              </Link>
            </div>
          </CardHeader>
          <CardContent>
            {modules.length === 0 ? (
              <div className="text-center py-8">
                <p className="text-gray-500 mb-4">–ü–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π</p>
                <Link href="/admin/modules/create">
                  <Button>–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –º–æ–¥—É–ª—å</Button>
                </Link>
              </div>
            ) : (
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>–ü–æ—Ä—è–¥–æ–∫</TableHead>
                    <TableHead>–ù–∞–∑–≤–∞–Ω–∏–µ</TableHead>
                    <TableHead>–£—Ä–æ–∫–∏</TableHead>
                    <TableHead>–í–æ–ø—Ä–æ—Å—ã</TableHead>
                    <TableHead>–°—Ç–∞—Ç—É—Å</TableHead>
                    <TableHead>–°–æ–∑–¥–∞–Ω</TableHead>
                    <TableHead>–î–µ–π—Å—Ç–≤–∏—è</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {modules
                    .sort((a, b) => a.order - b.order)
                    .map((module) => (
                      <TableRow 
                        key={module.id}
                        className={!module.isActive ? 'opacity-60 bg-gray-50' : ''}
                      >
                        <TableCell className="font-medium">
                          {module.order}
                        </TableCell>
                        <TableCell>
                          <div>
                            <div className="font-medium">{module.title}</div>
                            <div className="text-sm text-gray-500 truncate max-w-xs">
                              {module.description}
                            </div>
                          </div>
                        </TableCell>
                        <TableCell>
                          <Badge variant="outline">
                            {module._count.lessons}
                          </Badge>
                        </TableCell>
                        <TableCell>
                          <Badge variant="outline">
                            {module._count.questions}
                          </Badge>
                        </TableCell>
                        <TableCell>
                          <Badge 
                            variant={module.isActive ? 'default' : 'secondary'}
                            className={module.isActive ? 'bg-green-100 text-green-800' : ''}
                          >
                            {module.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                          </Badge>
                        </TableCell>
                        <TableCell>{formatDate(module.createdAt)}</TableCell>
                        <TableCell>
                          <div className="flex space-x-2">
                            <Link href={`/admin/modules/${module.id}`}>
                              <Button size="sm" variant="outline">
                                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                              </Button>
                            </Link>
                            <Button 
                              size="sm" 
                              variant="destructive"
                              onClick={() => deleteModule(module.id)}
                            >
                              –£–¥–∞–ª–∏—Ç—å
                            </Button>
                          </div>
                        </TableCell>
                      </TableRow>
                    ))}
                </TableBody>
              </Table>
            )}
          </CardContent>
        </Card>
      </main>
    </div>
  )
}